#!/usr/bin/env ruby

require 'awesome_print'

class String
  def split_unescaped(str, opts={}, &block)
    self.split(/(?<!\\)#{str}/).map do |s|
      s = s.gsub(/\\(?=#{str})/, '')
      s = s.sub(/^\s*/,'').sub(/\s*$/,'') if opts[:trim] == true
      s = yield s if block_given?
      s
    end
  end
end

command = ARGV.shift

if command[/--?e(d(i(t)?)?)?/]
  task_bin = File.realpath(__FILE__)
  task_bin_dir = File.dirname(task_bin)
  git_dir = `cd #{task_bin_dir}; git rev-parse --show-toplevel`.chomp
  files = []
  if ARGV.count > 0
    ARGV.flat_map do |arg|
      files += Dir["#{git_dir}/{bin,lib}/**/*.rb"].grep Regexp.new(git_dir + '.*' + arg.scan(/./).join('.*'))
    end
  end
  system('vim -O %s %s/../lib/clitasks.rb %s' % [task_bin, task_bin_dir, files.uniq.join(' ')])
  exit 0
end

if Dir['lib/clitasks.rb'].count > 0 && (Dir['.git'].count > 0 || ENV['CLIT_ENV'] == 'test')
  require './lib/clitasks'
else
  require 'clitasks'
end

case command
when 'version'
  puts CliTasks::VERSION
when 'rebuild'
  CliTasks::Commands.rebuild
when 'multi', 'many', 'mcreate'
  CliTasks::Commands.mcreate *ARGV
  CliTasks::Commands.rebuild
when 'create', 'new', 'add', 'c', 'n', 'a'
  CliTasks::Commands.create *ARGV
  CliTasks::Commands.rebuild
when 'edit'
  CliTasks::Commands.edit *ARGV
  CliTasks::Commands.rebuild
when 'search'
  if ARGV.any?{|arg| arg == '-e' }
    CliTasks::Commands.edit *ARGV.reject{|arg| arg == '-e' }
  else
    CliTasks::Commands.search *ARGV
  end
  CliTasks::Commands.rebuild
when 'import'
  if ARGV.any?
    tasks = IO.read(ARGV[0]).split(/\s*\n+\s*/)
    CliTasks::Commands.mcreate *tasks
    CliTasks::Commands.rebuild
  else
    f = Tempfile.new('tasks')
    system ENV['EDITOR'] || 'vim', f.path
    tasks = IO.read(f.path).split(/\s*\n+\s*/)
    CliTasks::Commands.mcreate *tasks
    CliTasks::Commands.rebuild
  end
when 'start'
when 'finish'
when 'tag'
when 'comment'
when 'list'
  CliTasks::Commands.list *ARGV
else
  CliTasks::Commands.list *ARGV.unshift(command)
end

# vim: ft=ruby
